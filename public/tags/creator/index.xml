<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>creator on 蓝胡子</title>
    <link>http://localhost:1313/tags/creator/</link>
    <description>Recent content in creator on 蓝胡子</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 14 Nov 2019 22:22:00 +0800</lastBuildDate><atom:link href="http://localhost:1313/tags/creator/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>构建一个cocos js的框架</title>
      <link>http://localhost:1313/post/build-cocos-js-framework/</link>
      <pubDate>Thu, 14 Nov 2019 22:22:00 +0800</pubDate>
      
      <guid>http://localhost:1313/post/build-cocos-js-framework/</guid>
      <description>早在几年前有个面试官问我，一个游戏框架应该包括哪些内容，那时候还是处理“只可意会不可言传”随便回答了一些片面内容， 随着大型项目不断的增多，大部分的框架内容都是我负责搭建的，从搭建-&amp;gt;完善-&amp;gt;验证-&amp;gt;(修补-&amp;gt;再验证)*n-&amp;gt;总结后才会有 一个更好的总结。
什么是框架？ 字面意义 框架（建筑学概念）_百度百科
框架（framework）是一个框子——指其约束性，也是一个架子——指其支撑性。是一个基本概念上的结构，用于去解决或者处理复杂的问题。我的理解 游戏框架其实很像一个“框架房”，要建一个小洋房，那会选建一个框架起来，把必要的支柱，楼梯，楼层高度先建起来，然后至于要填充 什么样的砖块、地板和家具等这些都是未知的。游戏也是一样，假如我们要做一款卡牌游戏，那么战斗、网络、引导、剧情、UI、声音、视频 和本地存储这些就是基本的支柱，其实就是用程序的面向对象思维把卡牌游戏抽象出公共的部分，然后把这些部分高内聚低偶合地模块化。
不同类型游戏框架会有所差异 不同类型的游戏需要是不一样的，如果你是单机游戏，你其实不必要为框架添加网络模块
如何构建？ *</description>
    </item>
    
  </channel>
</rss>
