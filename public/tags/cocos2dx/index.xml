<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>cocos2dx on 蓝胡子</title>
    <link>http://www.lanhuzi.com/tags/cocos2dx/</link>
    <description>Recent content in cocos2dx on 蓝胡子</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 14 Nov 2019 22:22:00 +0800</lastBuildDate>
    
	<atom:link href="http://www.lanhuzi.com/tags/cocos2dx/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>构建一个cocos js的框架</title>
      <link>http://www.lanhuzi.com/post/build-cocos-js-framework/</link>
      <pubDate>Thu, 14 Nov 2019 22:22:00 +0800</pubDate>
      
      <guid>http://www.lanhuzi.com/post/build-cocos-js-framework/</guid>
      <description>什么是框架？ 框架这个东西
如何构建？ *</description>
    </item>
    
    <item>
      <title>android so path 被锁定</title>
      <link>http://www.lanhuzi.com/post/android-so-path-lock/</link>
      <pubDate>Wed, 31 Oct 2018 01:44:00 +0800</pubDate>
      
      <guid>http://www.lanhuzi.com/post/android-so-path-lock/</guid>
      <description>&lt;h2 id=&#34;描述&#34;&gt;描述&lt;/h2&gt;

&lt;p&gt;接XXSDK的时候java 加载so的时候闪退&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>android-armeabi-lib-lock</title>
      <link>http://www.lanhuzi.com/post/android-armeabi-lib-lock/</link>
      <pubDate>Fri, 13 Oct 2017 15:05:00 +0800</pubDate>
      
      <guid>http://www.lanhuzi.com/post/android-armeabi-lib-lock/</guid>
      <description>&lt;h2 id=&#34;描述&#34;&gt;描述&lt;/h2&gt;

&lt;p&gt;cocos2dxlua.so放在armeabi-v7a下 接SDK又引入 armeabi 几个so 结果会出现找不到cocos2dxlua.so 这个文件 导致崩溃&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Android SDK 不会自己删除服务问题</title>
      <link>http://www.lanhuzi.com/post/android-sdk-service-stop-problem/</link>
      <pubDate>Wed, 26 Jul 2017 16:04:00 +0800</pubDate>
      
      <guid>http://www.lanhuzi.com/post/android-sdk-service-stop-problem/</guid>
      <description>&lt;h2 id=&#34;描述&#34;&gt;描述&lt;/h2&gt;

&lt;p&gt;接android SDK 游戏退出或者崩溃后，快速进入游戏会一直崩溃。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>cocos2dx android ui and gl threads</title>
      <link>http://www.lanhuzi.com/post/cocos2dx-android-threads/</link>
      <pubDate>Fri, 19 May 2017 01:18:00 +0800</pubDate>
      
      <guid>http://www.lanhuzi.com/post/cocos2dx-android-threads/</guid>
      <description>环境 搞android SDK 的时候，因为接quickSDK没有lua版本，只好用android 原生版本，自己写 java跟lua的交互
问题 java 跟 lua 交互有概率性的会出现闪退
思路及解决 思路 这种概率性的闪退，一般都是线程不安全导致的，于是我就去找，看到cocos2dx 里面有很多用到
mActivity:runOnUiThread(new Runnable(){ public void run() { // xxoo xxoo  } }) 然后我就认为这个是cocos2dx的主线程，然后就拼命的用它去调用lua,结果就是闪退不断， 这个时候我觉得是不对的，如果这个是主线程是不可能有这个问题，于是我再去找，发现一个方法长得跟它很像的
mActivity:runOnGLThread(new Runnable(){ public void run() { // xxoo xxoo  } }) 这时候我才清楚，原来这个GL线程才是我们游戏线程，UI线程是UI框架的，如果调用高级UI或者SDK就需要用UI线程。
解决方案 cocos2dx的东西使用 GL线程 android高线UI使用 UI线程
结果 不闪退</description>
    </item>
    
    <item>
      <title>cocos2dx etc 闪退问题</title>
      <link>http://www.lanhuzi.com/post/cocos2dx-etc1-crash/</link>
      <pubDate>Tue, 16 May 2017 10:19:00 +0800</pubDate>
      
      <guid>http://www.lanhuzi.com/post/cocos2dx-etc1-crash/</guid>
      <description>环境 稳定性测试期
问题 部分机型和部分模拟器会因为ETC1资源导致闪退
07-13 21:59:43.727 E/szipinf (21935): Error reading asset data 07-13 21:59:43.727 E/szipinf (21935): Unable to access asset data: -1 思路及解决 问题分析 经过调试发现是因为只有部分ETC1资源没有办法正常加载，于是我就把没办法正常加载的资源取出来找规律， 然后我发现了它们都有一个相同的问题，就是有大部分的透明区域，就是没有用的区域，大概是因为ETC1格式压缩 的问题和这些闪退的机型协议不一致所导致的，我也不想去深究。
解决方案 我尝试在整张图片周围画一个距形的红框，目的让资源四周都有像素，果然闪退解决
结果 做图工具升级，完美解决</description>
    </item>
    
    <item>
      <title>cocos2dx FileUtils 缓存机制</title>
      <link>http://www.lanhuzi.com/post/cocos2dx-fileutils-cache/</link>
      <pubDate>Fri, 12 May 2017 15:36:00 +0800</pubDate>
      
      <guid>http://www.lanhuzi.com/post/cocos2dx-fileutils-cache/</guid>
      <description>背景 处理热lua更新功能
问题 有些文件没有没有获取最新下载的资源，依然是使用旧的
思路及解决 首先查看搜索路径 dump(cc.FileUtils:getInstance():getSearchPaths()) -- 结果是没有问题的 路径缓存起来 std::string FileUtils::fullPathForFilename(const std::string &amp;amp;filename) const { if (filename.empty()) { return &amp;#34;&amp;#34;; } if (isAbsolutePath(filename)) { return filename; } // Already Cached ?  auto cacheIter = _fullPathCache.find(filename); if(cacheIter != _fullPathCache.end()) { return cacheIter-&amp;gt;second; } // Get the new file name.  const std::string newFilename( getNewFilename(filename) ); std::string fullpath; for (const auto&amp;amp; searchIt : _searchPathArray) { for (const auto&amp;amp; resolutionIt : _searchResolutionsOrderArray) { fullpath = this-&amp;gt;getPathForFilename(newFilename, resolutionIt, searchIt); if (!</description>
    </item>
    
    <item>
      <title>android etc1 黑块问题</title>
      <link>http://www.lanhuzi.com/post/cocos2dx-android-black-block/</link>
      <pubDate>Wed, 03 May 2017 03:40:00 +0800</pubDate>
      
      <guid>http://www.lanhuzi.com/post/cocos2dx-android-black-block/</guid>
      <description>环境 接android SDK
问题 在SDK返回的时候，部分UI会出现黑块，LOG会提示Opengl GL 502等错误
解决思路 查找根源 一开始我的处理方案是把那些异常的资源重新加载，是可以解决大部分问题，但觉得这并不上策。于是我再继续找根源。。。 根源是因为SDK在初始化|登录|支付的回调中去可能去调用到我们的UI，这个回调的线程并不是*Cocos2dxUI线程*，这样子操作UI是不能保证先后顺序，这个时候android机子会触发重新加载资源的时机。 所以部分重载一半或者一些不预料的黑块就出现了。
function () xxx:runAction(cc.Sequence:create( cc.DelayTime:create(0.02), cc.CallFunc:create(function () -- ... do something end))) end 查找为什么会出现黑块 结果 完美解决黑块问题</description>
    </item>
    
    <item>
      <title>cocos2dx 重新创建机制</title>
      <link>http://www.lanhuzi.com/post/cocos2dx-recreate-event/</link>
      <pubDate>Sun, 30 Apr 2017 08:29:00 +0800</pubDate>
      
      <guid>http://www.lanhuzi.com/post/cocos2dx-recreate-event/</guid>
      <description>&lt;h2 id=&#34;描述&#34;&gt;描述&lt;/h2&gt;

&lt;p&gt;SDK在游戏里面切换activity的时候花屏&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>