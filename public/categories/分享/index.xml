<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>分享 on 蓝胡子</title>
    <link>http://www.lanhuzi.com/categories/%E5%88%86%E4%BA%AB/</link>
    <description>Recent content in 分享 on 蓝胡子</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 15 Nov 2019 15:10:00 +0800</lastBuildDate>
    
	<atom:link href="http://www.lanhuzi.com/categories/%E5%88%86%E4%BA%AB/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>关于custom.el文件</title>
      <link>http://www.lanhuzi.com/post/about-custom-file/</link>
      <pubDate>Fri, 15 Nov 2019 15:10:00 +0800</pubDate>
      
      <guid>http://www.lanhuzi.com/post/about-custom-file/</guid>
      <description>Saving Customizations - GNU Emacs Manual 官方详细说明
在emacs里面做的一些选择会记录在这个文件里面，比如进入dir-locals.el询问后 你的选择会写入这个文件. </description>
    </item>
    
    <item>
      <title>Cocos2dx优化之RenderTexture</title>
      <link>http://www.lanhuzi.com/post/cocos2dx-rendertexture1/</link>
      <pubDate>Sun, 27 Jan 2019 18:21:00 +0800</pubDate>
      
      <guid>http://www.lanhuzi.com/post/cocos2dx-rendertexture1/</guid>
      <description> 为什么要用 游戏有一个指标是GPU渲染，做过优化的人应该对Opengl的drawcall应该都很熟悉，cocos2dx里面还有个batchnode就是批渲染 这个可以减少drawcall，但这个其实就是减少渲染流程，要达到一定的量级才会体现效果，平时那个几十个是基本影响不大。我自己测试 都是上千个数量级会效果。而且有很大的局限性，因为它要求材质必需是同一个，而这个材质包括Texture,BlendFunc,shader，只要 一个是不同的便不行，这种痛你们自己感受才明白。接下来我提的另外一种更有效的方案，那就是RenderTexture,它要做的主要事情就 是把一些碎小的元素绘制出来，然后把它们截取出来，利用的是Opengl FBO技术，如果把它们融合在一张再去绘制，那就可以大大降低 GPU的绘制时间，可以降低耗电量。 但这个是有代价的，你必要多一张绘制后大小的尺寸的占用内存，还有读取FBO消耗的性能。
什么时候用 了解完RenderTexture优点缺点后，我们要分析什么时候用它，一般我们会用它在列表上面，特别是一些不常变动的列表上面，如果列表项 越复杂，那它的效果就越明显，比如一个列表上是十个drawcall,那显示20，那就是200个drawcall， 这个量级应该是比较难接受的， 如果使用RenderTexture那就是20个，10倍的差距了解一下。
怎么用 </description>
    </item>
    
    <item>
      <title>mac下svn常用操作命令</title>
      <link>http://www.lanhuzi.com/post/svn-common-operation/</link>
      <pubDate>Fri, 16 Nov 2018 14:33:00 +0800</pubDate>
      
      <guid>http://www.lanhuzi.com/post/svn-common-operation/</guid>
      <description> svn配置BeyondCompare对比工具 Beyond Compare 官方说明
常规操作 检出工程 svn co url 查看当前状态 svn st 添加文件或者文件夹 svn add . --force 查看当前修改 svn diff 其它 svn help
进阶操作 删除所有不存在的文件和文件夹 svn st|awk &amp;#39;{if($1==&amp;#34;!&amp;#34;){print $2}}&amp;#39;|xargs svn rm 增加？号文件 svn st|awk &amp;#39;{if($1==&amp;#34;?&amp;#34;){print $2}}&amp;#39;|xargs svn add 提交m文件文件 svn st|awk &amp;#39;{if($1==&amp;#34;m&amp;#34;){print $2}}&amp;#39;|xargs svn ci -m &amp;#34;comments&amp;#34;</description>
    </item>
    
    <item>
      <title>游戏里面的技能该如何定义？</title>
      <link>http://www.lanhuzi.com/post/what-is-skill/</link>
      <pubDate>Wed, 18 Apr 2018 19:43:00 +0800</pubDate>
      
      <guid>http://www.lanhuzi.com/post/what-is-skill/</guid>
      <description>&lt;div class=&#34;ox-hugo-toc toc&#34;&gt;
&lt;div&gt;&lt;/div&gt;

&lt;div class=&#34;heading&#34;&gt;Table of Contents&lt;/div&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#导火索&#34;&gt;导火索&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#什么是技能&#34;&gt;什么是技能？&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#百度的技能&#34;&gt;百度的技能&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#我的翻译&#34;&gt;我的翻译&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#为什么要去深究这个问题&#34;&gt;为什么要去深究这个问题？&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#不同的拆解会有不同的结构&#34;&gt;不同的拆解会有不同的结构&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#合理的定义会让结构更清晰&#34;&gt;合理的定义会让结构更清晰&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#我的做法&#34;&gt;我的做法&lt;/a&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#通道&#34;&gt;通道&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#全部指向通道&#34;&gt;全部指向通道&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;/div&gt;
&lt;!--endtoc--&gt;&lt;/p&gt;

&lt;h2 id=&#34;导火索&#34;&gt;导火索&lt;/h2&gt;

&lt;p&gt;英雄A 技能1 释放一个火球打敌人身上会产生灼烧3秒，每秒损失50点生命值。&lt;/p&gt;

&lt;p&gt;火球和灼烧效果是属于这个技能的吗？
有问过不少策划，他们觉得是。而且他们会随便找个人问下，都会觉得是。这个是我比较不能理解的地方，所以我开始展开我的探索。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>